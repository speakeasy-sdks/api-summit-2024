/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type StandardStickerResponse = {
    id: string;
    name: string;
    tags: string;
    type?: 1 | undefined;
    formatType?: 1 | null | undefined;
    description?: string | null | undefined;
    packId: string;
    sortValue: number;
};

/** @internal */
export const StandardStickerResponse$inboundSchema: z.ZodType<
    StandardStickerResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        id: z.string(),
        name: z.string(),
        tags: z.string(),
        type: z.literal(1).optional(),
        format_type: z.nullable(z.literal(1)).optional(),
        description: z.nullable(z.string()).optional(),
        pack_id: z.string(),
        sort_value: z.number().int(),
    })
    .transform((v) => {
        return remap$(v, {
            format_type: "formatType",
            pack_id: "packId",
            sort_value: "sortValue",
        });
    });

/** @internal */
export type StandardStickerResponse$Outbound = {
    id: string;
    name: string;
    tags: string;
    type: 1;
    format_type: 1 | null;
    description?: string | null | undefined;
    pack_id: string;
    sort_value: number;
};

/** @internal */
export const StandardStickerResponse$outboundSchema: z.ZodType<
    StandardStickerResponse$Outbound,
    z.ZodTypeDef,
    StandardStickerResponse
> = z
    .object({
        id: z.string(),
        name: z.string(),
        tags: z.string(),
        type: z.literal(1).default(1 as const),
        formatType: z.nullable(z.literal(1).default(1 as const)),
        description: z.nullable(z.string()).optional(),
        packId: z.string(),
        sortValue: z.number().int(),
    })
    .transform((v) => {
        return remap$(v, {
            formatType: "format_type",
            packId: "pack_id",
            sortValue: "sort_value",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace StandardStickerResponse$ {
    /** @deprecated use `StandardStickerResponse$inboundSchema` instead. */
    export const inboundSchema = StandardStickerResponse$inboundSchema;
    /** @deprecated use `StandardStickerResponse$outboundSchema` instead. */
    export const outboundSchema = StandardStickerResponse$outboundSchema;
    /** @deprecated use `StandardStickerResponse$Outbound` instead. */
    export type Outbound = StandardStickerResponse$Outbound;
}
