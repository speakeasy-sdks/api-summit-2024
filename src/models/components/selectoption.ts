/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { Emoji, Emoji$inboundSchema, Emoji$Outbound, Emoji$outboundSchema } from "./emoji.js";
import * as z from "zod";

export type SelectOption = {
    label: string;
    value: string;
    description?: string | null | undefined;
    emoji?: Emoji | null | undefined;
    default?: boolean | null | undefined;
};

/** @internal */
export const SelectOption$inboundSchema: z.ZodType<SelectOption, z.ZodTypeDef, unknown> = z.object({
    label: z.string(),
    value: z.string(),
    description: z.nullable(z.string()).optional(),
    emoji: z.nullable(Emoji$inboundSchema).optional(),
    default: z.nullable(z.boolean()).optional(),
});

/** @internal */
export type SelectOption$Outbound = {
    label: string;
    value: string;
    description?: string | null | undefined;
    emoji?: Emoji$Outbound | null | undefined;
    default?: boolean | null | undefined;
};

/** @internal */
export const SelectOption$outboundSchema: z.ZodType<
    SelectOption$Outbound,
    z.ZodTypeDef,
    SelectOption
> = z.object({
    label: z.string(),
    value: z.string(),
    description: z.nullable(z.string()).optional(),
    emoji: z.nullable(Emoji$outboundSchema).optional(),
    default: z.nullable(z.boolean()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SelectOption$ {
    /** @deprecated use `SelectOption$inboundSchema` instead. */
    export const inboundSchema = SelectOption$inboundSchema;
    /** @deprecated use `SelectOption$outboundSchema` instead. */
    export const outboundSchema = SelectOption$outboundSchema;
    /** @deprecated use `SelectOption$Outbound` instead. */
    export type Outbound = SelectOption$Outbound;
}
