/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import {
    UserResponse,
    UserResponse$inboundSchema,
    UserResponse$Outbound,
    UserResponse$outboundSchema,
} from "./userresponse.js";
import * as z from "zod";

export type GuildStickerResponse = {
    id: string;
    name: string;
    tags: string;
    type?: 1 | undefined;
    formatType?: 1 | null | undefined;
    description?: string | null | undefined;
    available: boolean;
    guildId: string;
    user?: UserResponse | null | undefined;
};

/** @internal */
export const GuildStickerResponse$inboundSchema: z.ZodType<
    GuildStickerResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        id: z.string(),
        name: z.string(),
        tags: z.string(),
        type: z.literal(1).optional(),
        format_type: z.nullable(z.literal(1)).optional(),
        description: z.nullable(z.string()).optional(),
        available: z.boolean(),
        guild_id: z.string(),
        user: z.nullable(UserResponse$inboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            format_type: "formatType",
            guild_id: "guildId",
        });
    });

/** @internal */
export type GuildStickerResponse$Outbound = {
    id: string;
    name: string;
    tags: string;
    type: 1;
    format_type: 1 | null;
    description?: string | null | undefined;
    available: boolean;
    guild_id: string;
    user?: UserResponse$Outbound | null | undefined;
};

/** @internal */
export const GuildStickerResponse$outboundSchema: z.ZodType<
    GuildStickerResponse$Outbound,
    z.ZodTypeDef,
    GuildStickerResponse
> = z
    .object({
        id: z.string(),
        name: z.string(),
        tags: z.string(),
        type: z.literal(1).default(1 as const),
        formatType: z.nullable(z.literal(1).default(1 as const)),
        description: z.nullable(z.string()).optional(),
        available: z.boolean(),
        guildId: z.string(),
        user: z.nullable(UserResponse$outboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            formatType: "format_type",
            guildId: "guild_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GuildStickerResponse$ {
    /** @deprecated use `GuildStickerResponse$inboundSchema` instead. */
    export const inboundSchema = GuildStickerResponse$inboundSchema;
    /** @deprecated use `GuildStickerResponse$outboundSchema` instead. */
    export const outboundSchema = GuildStickerResponse$outboundSchema;
    /** @deprecated use `GuildStickerResponse$Outbound` instead. */
    export type Outbound = GuildStickerResponse$Outbound;
}
