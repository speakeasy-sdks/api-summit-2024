/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import {
    UserResponse,
    UserResponse$inboundSchema,
    UserResponse$Outbound,
    UserResponse$outboundSchema,
} from "./userresponse.js";
import * as z from "zod";

export type BasicApplicationResponse = {
    id: string;
    name: string;
    icon?: string | null | undefined;
    description: string;
    type?: 4 | null | undefined;
    coverImage?: string | null | undefined;
    primarySkuId?: string | null | undefined;
    bot?: UserResponse | null | undefined;
};

/** @internal */
export const BasicApplicationResponse$inboundSchema: z.ZodType<
    BasicApplicationResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        id: z.string(),
        name: z.string(),
        icon: z.nullable(z.string()).optional(),
        description: z.string(),
        type: z.nullable(z.literal(4)).optional(),
        cover_image: z.nullable(z.string()).optional(),
        primary_sku_id: z.nullable(z.string()).optional(),
        bot: z.nullable(UserResponse$inboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            cover_image: "coverImage",
            primary_sku_id: "primarySkuId",
        });
    });

/** @internal */
export type BasicApplicationResponse$Outbound = {
    id: string;
    name: string;
    icon?: string | null | undefined;
    description: string;
    type: 4 | null;
    cover_image?: string | null | undefined;
    primary_sku_id?: string | null | undefined;
    bot?: UserResponse$Outbound | null | undefined;
};

/** @internal */
export const BasicApplicationResponse$outboundSchema: z.ZodType<
    BasicApplicationResponse$Outbound,
    z.ZodTypeDef,
    BasicApplicationResponse
> = z
    .object({
        id: z.string(),
        name: z.string(),
        icon: z.nullable(z.string()).optional(),
        description: z.string(),
        type: z.nullable(z.literal(4).default(4 as const)),
        coverImage: z.nullable(z.string()).optional(),
        primarySkuId: z.nullable(z.string()).optional(),
        bot: z.nullable(UserResponse$outboundSchema).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            coverImage: "cover_image",
            primarySkuId: "primary_sku_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BasicApplicationResponse$ {
    /** @deprecated use `BasicApplicationResponse$inboundSchema` instead. */
    export const inboundSchema = BasicApplicationResponse$inboundSchema;
    /** @deprecated use `BasicApplicationResponse$outboundSchema` instead. */
    export const outboundSchema = BasicApplicationResponse$outboundSchema;
    /** @deprecated use `BasicApplicationResponse$Outbound` instead. */
    export type Outbound = BasicApplicationResponse$Outbound;
}
