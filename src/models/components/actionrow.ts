/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  Button,
  Button$inboundSchema,
  Button$Outbound,
  Button$outboundSchema,
} from "./button.js";
import {
  ChannelSelect,
  ChannelSelect$inboundSchema,
  ChannelSelect$Outbound,
  ChannelSelect$outboundSchema,
} from "./channelselect.js";
import {
  InputText,
  InputText$inboundSchema,
  InputText$Outbound,
  InputText$outboundSchema,
} from "./inputtext.js";
import {
  MentionableSelect,
  MentionableSelect$inboundSchema,
  MentionableSelect$Outbound,
  MentionableSelect$outboundSchema,
} from "./mentionableselect.js";
import {
  RoleSelect,
  RoleSelect$inboundSchema,
  RoleSelect$Outbound,
  RoleSelect$outboundSchema,
} from "./roleselect.js";
import {
  StringSelect,
  StringSelect$inboundSchema,
  StringSelect$Outbound,
  StringSelect$outboundSchema,
} from "./stringselect.js";
import {
  UserSelect,
  UserSelect$inboundSchema,
  UserSelect$Outbound,
  UserSelect$outboundSchema,
} from "./userselect.js";

export type ActionRowComponents =
  | MentionableSelect
  | RoleSelect
  | StringSelect
  | UserSelect
  | Button
  | ChannelSelect
  | InputText;

export type ActionRow = {
  type?: 1 | undefined;
  components: Array<
    | MentionableSelect
    | RoleSelect
    | StringSelect
    | UserSelect
    | Button
    | ChannelSelect
    | InputText
  >;
};

/** @internal */
export const ActionRowComponents$inboundSchema: z.ZodType<
  ActionRowComponents,
  z.ZodTypeDef,
  unknown
> = z.union([
  MentionableSelect$inboundSchema,
  RoleSelect$inboundSchema,
  StringSelect$inboundSchema,
  UserSelect$inboundSchema,
  Button$inboundSchema,
  ChannelSelect$inboundSchema,
  InputText$inboundSchema,
]);

/** @internal */
export type ActionRowComponents$Outbound =
  | MentionableSelect$Outbound
  | RoleSelect$Outbound
  | StringSelect$Outbound
  | UserSelect$Outbound
  | Button$Outbound
  | ChannelSelect$Outbound
  | InputText$Outbound;

/** @internal */
export const ActionRowComponents$outboundSchema: z.ZodType<
  ActionRowComponents$Outbound,
  z.ZodTypeDef,
  ActionRowComponents
> = z.union([
  MentionableSelect$outboundSchema,
  RoleSelect$outboundSchema,
  StringSelect$outboundSchema,
  UserSelect$outboundSchema,
  Button$outboundSchema,
  ChannelSelect$outboundSchema,
  InputText$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ActionRowComponents$ {
  /** @deprecated use `ActionRowComponents$inboundSchema` instead. */
  export const inboundSchema = ActionRowComponents$inboundSchema;
  /** @deprecated use `ActionRowComponents$outboundSchema` instead. */
  export const outboundSchema = ActionRowComponents$outboundSchema;
  /** @deprecated use `ActionRowComponents$Outbound` instead. */
  export type Outbound = ActionRowComponents$Outbound;
}

/** @internal */
export const ActionRow$inboundSchema: z.ZodType<
  ActionRow,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: z.literal(1).optional(),
  components: z.array(
    z.union([
      MentionableSelect$inboundSchema,
      RoleSelect$inboundSchema,
      StringSelect$inboundSchema,
      UserSelect$inboundSchema,
      Button$inboundSchema,
      ChannelSelect$inboundSchema,
      InputText$inboundSchema,
    ]),
  ),
});

/** @internal */
export type ActionRow$Outbound = {
  type: 1;
  components: Array<
    | MentionableSelect$Outbound
    | RoleSelect$Outbound
    | StringSelect$Outbound
    | UserSelect$Outbound
    | Button$Outbound
    | ChannelSelect$Outbound
    | InputText$Outbound
  >;
};

/** @internal */
export const ActionRow$outboundSchema: z.ZodType<
  ActionRow$Outbound,
  z.ZodTypeDef,
  ActionRow
> = z.object({
  type: z.literal(1).default(1 as const),
  components: z.array(
    z.union([
      MentionableSelect$outboundSchema,
      RoleSelect$outboundSchema,
      StringSelect$outboundSchema,
      UserSelect$outboundSchema,
      Button$outboundSchema,
      ChannelSelect$outboundSchema,
      InputText$outboundSchema,
    ]),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ActionRow$ {
  /** @deprecated use `ActionRow$inboundSchema` instead. */
  export const inboundSchema = ActionRow$inboundSchema;
  /** @deprecated use `ActionRow$outboundSchema` instead. */
  export const outboundSchema = ActionRow$outboundSchema;
  /** @deprecated use `ActionRow$Outbound` instead. */
  export type Outbound = ActionRow$Outbound;
}
