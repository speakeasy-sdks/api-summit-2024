/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type InviteGuildResponse = {
    id: string;
    name: string;
    splash?: string | null | undefined;
    banner?: string | null | undefined;
    description?: string | null | undefined;
    icon?: string | null | undefined;
    features: Array<string>;
    verificationLevel?: 0 | null | undefined;
    vanityUrlCode?: string | null | undefined;
    nsfwLevel?: 0 | null | undefined;
    nsfw?: boolean | null | undefined;
    premiumSubscriptionCount?: number | null | undefined;
};

/** @internal */
export const InviteGuildResponse$inboundSchema: z.ZodType<
    InviteGuildResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        id: z.string(),
        name: z.string(),
        splash: z.nullable(z.string()).optional(),
        banner: z.nullable(z.string()).optional(),
        description: z.nullable(z.string()).optional(),
        icon: z.nullable(z.string()).optional(),
        features: z.array(z.string()),
        verification_level: z.nullable(z.literal(0)).optional(),
        vanity_url_code: z.nullable(z.string()).optional(),
        nsfw_level: z.nullable(z.literal(0)).optional(),
        nsfw: z.nullable(z.boolean()).optional(),
        premium_subscription_count: z.nullable(z.number().int()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            verification_level: "verificationLevel",
            vanity_url_code: "vanityUrlCode",
            nsfw_level: "nsfwLevel",
            premium_subscription_count: "premiumSubscriptionCount",
        });
    });

/** @internal */
export type InviteGuildResponse$Outbound = {
    id: string;
    name: string;
    splash?: string | null | undefined;
    banner?: string | null | undefined;
    description?: string | null | undefined;
    icon?: string | null | undefined;
    features: Array<string>;
    verification_level: 0 | null;
    vanity_url_code?: string | null | undefined;
    nsfw_level: 0 | null;
    nsfw?: boolean | null | undefined;
    premium_subscription_count?: number | null | undefined;
};

/** @internal */
export const InviteGuildResponse$outboundSchema: z.ZodType<
    InviteGuildResponse$Outbound,
    z.ZodTypeDef,
    InviteGuildResponse
> = z
    .object({
        id: z.string(),
        name: z.string(),
        splash: z.nullable(z.string()).optional(),
        banner: z.nullable(z.string()).optional(),
        description: z.nullable(z.string()).optional(),
        icon: z.nullable(z.string()).optional(),
        features: z.array(z.string()),
        verificationLevel: z.nullable(z.literal(0).default(0 as const)),
        vanityUrlCode: z.nullable(z.string()).optional(),
        nsfwLevel: z.nullable(z.literal(0).default(0 as const)),
        nsfw: z.nullable(z.boolean()).optional(),
        premiumSubscriptionCount: z.nullable(z.number().int()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            verificationLevel: "verification_level",
            vanityUrlCode: "vanity_url_code",
            nsfwLevel: "nsfw_level",
            premiumSubscriptionCount: "premium_subscription_count",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InviteGuildResponse$ {
    /** @deprecated use `InviteGuildResponse$inboundSchema` instead. */
    export const inboundSchema = InviteGuildResponse$inboundSchema;
    /** @deprecated use `InviteGuildResponse$outboundSchema` instead. */
    export const outboundSchema = InviteGuildResponse$outboundSchema;
    /** @deprecated use `InviteGuildResponse$Outbound` instead. */
    export type Outbound = InviteGuildResponse$Outbound;
}
