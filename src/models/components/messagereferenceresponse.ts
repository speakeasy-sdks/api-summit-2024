/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type MessageReferenceResponse = {
    type?: 0 | null | undefined;
    channelId: string;
    messageId?: string | null | undefined;
    guildId?: string | null | undefined;
};

/** @internal */
export const MessageReferenceResponse$inboundSchema: z.ZodType<
    MessageReferenceResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        type: z.nullable(z.literal(0)).optional(),
        channel_id: z.string(),
        message_id: z.nullable(z.string()).optional(),
        guild_id: z.nullable(z.string()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            channel_id: "channelId",
            message_id: "messageId",
            guild_id: "guildId",
        });
    });

/** @internal */
export type MessageReferenceResponse$Outbound = {
    type: 0 | null;
    channel_id: string;
    message_id?: string | null | undefined;
    guild_id?: string | null | undefined;
};

/** @internal */
export const MessageReferenceResponse$outboundSchema: z.ZodType<
    MessageReferenceResponse$Outbound,
    z.ZodTypeDef,
    MessageReferenceResponse
> = z
    .object({
        type: z.nullable(z.literal(0).default(0 as const)),
        channelId: z.string(),
        messageId: z.nullable(z.string()).optional(),
        guildId: z.nullable(z.string()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            channelId: "channel_id",
            messageId: "message_id",
            guildId: "guild_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MessageReferenceResponse$ {
    /** @deprecated use `MessageReferenceResponse$inboundSchema` instead. */
    export const inboundSchema = MessageReferenceResponse$inboundSchema;
    /** @deprecated use `MessageReferenceResponse$outboundSchema` instead. */
    export const outboundSchema = MessageReferenceResponse$outboundSchema;
    /** @deprecated use `MessageReferenceResponse$Outbound` instead. */
    export type Outbound = MessageReferenceResponse$Outbound;
}
