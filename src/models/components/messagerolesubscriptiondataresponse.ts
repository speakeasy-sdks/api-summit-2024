/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type MessageRoleSubscriptionDataResponse = {
    roleSubscriptionListingId: string;
    tierName: string;
    totalMonthsSubscribed: number;
    isRenewal: boolean;
};

/** @internal */
export const MessageRoleSubscriptionDataResponse$inboundSchema: z.ZodType<
    MessageRoleSubscriptionDataResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        role_subscription_listing_id: z.string(),
        tier_name: z.string(),
        total_months_subscribed: z.number().int(),
        is_renewal: z.boolean(),
    })
    .transform((v) => {
        return remap$(v, {
            role_subscription_listing_id: "roleSubscriptionListingId",
            tier_name: "tierName",
            total_months_subscribed: "totalMonthsSubscribed",
            is_renewal: "isRenewal",
        });
    });

/** @internal */
export type MessageRoleSubscriptionDataResponse$Outbound = {
    role_subscription_listing_id: string;
    tier_name: string;
    total_months_subscribed: number;
    is_renewal: boolean;
};

/** @internal */
export const MessageRoleSubscriptionDataResponse$outboundSchema: z.ZodType<
    MessageRoleSubscriptionDataResponse$Outbound,
    z.ZodTypeDef,
    MessageRoleSubscriptionDataResponse
> = z
    .object({
        roleSubscriptionListingId: z.string(),
        tierName: z.string(),
        totalMonthsSubscribed: z.number().int(),
        isRenewal: z.boolean(),
    })
    .transform((v) => {
        return remap$(v, {
            roleSubscriptionListingId: "role_subscription_listing_id",
            tierName: "tier_name",
            totalMonthsSubscribed: "total_months_subscribed",
            isRenewal: "is_renewal",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MessageRoleSubscriptionDataResponse$ {
    /** @deprecated use `MessageRoleSubscriptionDataResponse$inboundSchema` instead. */
    export const inboundSchema = MessageRoleSubscriptionDataResponse$inboundSchema;
    /** @deprecated use `MessageRoleSubscriptionDataResponse$outboundSchema` instead. */
    export const outboundSchema = MessageRoleSubscriptionDataResponse$outboundSchema;
    /** @deprecated use `MessageRoleSubscriptionDataResponse$Outbound` instead. */
    export type Outbound = MessageRoleSubscriptionDataResponse$Outbound;
}
