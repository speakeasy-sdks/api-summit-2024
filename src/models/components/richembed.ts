/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    RichEmbedAuthor,
    RichEmbedAuthor$inboundSchema,
    RichEmbedAuthor$Outbound,
    RichEmbedAuthor$outboundSchema,
} from "./richembedauthor.js";
import {
    RichEmbedField,
    RichEmbedField$inboundSchema,
    RichEmbedField$Outbound,
    RichEmbedField$outboundSchema,
} from "./richembedfield.js";
import {
    RichEmbedFooter,
    RichEmbedFooter$inboundSchema,
    RichEmbedFooter$Outbound,
    RichEmbedFooter$outboundSchema,
} from "./richembedfooter.js";
import {
    RichEmbedImage,
    RichEmbedImage$inboundSchema,
    RichEmbedImage$Outbound,
    RichEmbedImage$outboundSchema,
} from "./richembedimage.js";
import {
    RichEmbedProvider,
    RichEmbedProvider$inboundSchema,
    RichEmbedProvider$Outbound,
    RichEmbedProvider$outboundSchema,
} from "./richembedprovider.js";
import {
    RichEmbedThumbnail,
    RichEmbedThumbnail$inboundSchema,
    RichEmbedThumbnail$Outbound,
    RichEmbedThumbnail$outboundSchema,
} from "./richembedthumbnail.js";
import {
    RichEmbedVideo,
    RichEmbedVideo$inboundSchema,
    RichEmbedVideo$Outbound,
    RichEmbedVideo$outboundSchema,
} from "./richembedvideo.js";
import * as z from "zod";

export type RichEmbed = {
    type?: string | null | undefined;
    url?: string | null | undefined;
    title?: string | null | undefined;
    color?: number | null | undefined;
    timestamp?: Date | null | undefined;
    description?: string | null | undefined;
    author?: RichEmbedAuthor | null | undefined;
    image?: RichEmbedImage | null | undefined;
    thumbnail?: RichEmbedThumbnail | null | undefined;
    footer?: RichEmbedFooter | null | undefined;
    fields?: Array<RichEmbedField> | null | undefined;
    provider?: RichEmbedProvider | null | undefined;
    video?: RichEmbedVideo | null | undefined;
};

/** @internal */
export const RichEmbed$inboundSchema: z.ZodType<RichEmbed, z.ZodTypeDef, unknown> = z.object({
    type: z.nullable(z.string()).optional(),
    url: z.nullable(z.string()).optional(),
    title: z.nullable(z.string()).optional(),
    color: z.nullable(z.number().int()).optional(),
    timestamp: z
        .nullable(
            z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
        )
        .optional(),
    description: z.nullable(z.string()).optional(),
    author: z.nullable(RichEmbedAuthor$inboundSchema).optional(),
    image: z.nullable(RichEmbedImage$inboundSchema).optional(),
    thumbnail: z.nullable(RichEmbedThumbnail$inboundSchema).optional(),
    footer: z.nullable(RichEmbedFooter$inboundSchema).optional(),
    fields: z.nullable(z.array(RichEmbedField$inboundSchema)).optional(),
    provider: z.nullable(RichEmbedProvider$inboundSchema).optional(),
    video: z.nullable(RichEmbedVideo$inboundSchema).optional(),
});

/** @internal */
export type RichEmbed$Outbound = {
    type?: string | null | undefined;
    url?: string | null | undefined;
    title?: string | null | undefined;
    color?: number | null | undefined;
    timestamp?: string | null | undefined;
    description?: string | null | undefined;
    author?: RichEmbedAuthor$Outbound | null | undefined;
    image?: RichEmbedImage$Outbound | null | undefined;
    thumbnail?: RichEmbedThumbnail$Outbound | null | undefined;
    footer?: RichEmbedFooter$Outbound | null | undefined;
    fields?: Array<RichEmbedField$Outbound> | null | undefined;
    provider?: RichEmbedProvider$Outbound | null | undefined;
    video?: RichEmbedVideo$Outbound | null | undefined;
};

/** @internal */
export const RichEmbed$outboundSchema: z.ZodType<RichEmbed$Outbound, z.ZodTypeDef, RichEmbed> =
    z.object({
        type: z.nullable(z.string()).optional(),
        url: z.nullable(z.string()).optional(),
        title: z.nullable(z.string()).optional(),
        color: z.nullable(z.number().int()).optional(),
        timestamp: z.nullable(z.date().transform((v) => v.toISOString())).optional(),
        description: z.nullable(z.string()).optional(),
        author: z.nullable(RichEmbedAuthor$outboundSchema).optional(),
        image: z.nullable(RichEmbedImage$outboundSchema).optional(),
        thumbnail: z.nullable(RichEmbedThumbnail$outboundSchema).optional(),
        footer: z.nullable(RichEmbedFooter$outboundSchema).optional(),
        fields: z.nullable(z.array(RichEmbedField$outboundSchema)).optional(),
        provider: z.nullable(RichEmbedProvider$outboundSchema).optional(),
        video: z.nullable(RichEmbedVideo$outboundSchema).optional(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RichEmbed$ {
    /** @deprecated use `RichEmbed$inboundSchema` instead. */
    export const inboundSchema = RichEmbed$inboundSchema;
    /** @deprecated use `RichEmbed$outboundSchema` instead. */
    export const outboundSchema = RichEmbed$outboundSchema;
    /** @deprecated use `RichEmbed$Outbound` instead. */
    export type Outbound = RichEmbed$Outbound;
}
