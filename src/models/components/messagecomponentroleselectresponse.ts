/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type MessageComponentRoleSelectResponse = {
    type?: 1 | undefined;
    id: number;
    customId: string;
    placeholder?: string | null | undefined;
    minValues?: number | null | undefined;
    maxValues?: number | null | undefined;
    disabled?: boolean | null | undefined;
};

/** @internal */
export const MessageComponentRoleSelectResponse$inboundSchema: z.ZodType<
    MessageComponentRoleSelectResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        type: z.literal(1).optional(),
        id: z.number().int(),
        custom_id: z.string(),
        placeholder: z.nullable(z.string()).optional(),
        min_values: z.nullable(z.number().int()).optional(),
        max_values: z.nullable(z.number().int()).optional(),
        disabled: z.nullable(z.boolean()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            custom_id: "customId",
            min_values: "minValues",
            max_values: "maxValues",
        });
    });

/** @internal */
export type MessageComponentRoleSelectResponse$Outbound = {
    type: 1;
    id: number;
    custom_id: string;
    placeholder?: string | null | undefined;
    min_values?: number | null | undefined;
    max_values?: number | null | undefined;
    disabled?: boolean | null | undefined;
};

/** @internal */
export const MessageComponentRoleSelectResponse$outboundSchema: z.ZodType<
    MessageComponentRoleSelectResponse$Outbound,
    z.ZodTypeDef,
    MessageComponentRoleSelectResponse
> = z
    .object({
        type: z.literal(1).default(1 as const),
        id: z.number().int(),
        customId: z.string(),
        placeholder: z.nullable(z.string()).optional(),
        minValues: z.nullable(z.number().int()).optional(),
        maxValues: z.nullable(z.number().int()).optional(),
        disabled: z.nullable(z.boolean()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            customId: "custom_id",
            minValues: "min_values",
            maxValues: "max_values",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MessageComponentRoleSelectResponse$ {
    /** @deprecated use `MessageComponentRoleSelectResponse$inboundSchema` instead. */
    export const inboundSchema = MessageComponentRoleSelectResponse$inboundSchema;
    /** @deprecated use `MessageComponentRoleSelectResponse$outboundSchema` instead. */
    export const outboundSchema = MessageComponentRoleSelectResponse$outboundSchema;
    /** @deprecated use `MessageComponentRoleSelectResponse$Outbound` instead. */
    export type Outbound = MessageComponentRoleSelectResponse$Outbound;
}
