/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type MessageAttachmentRequest = {
  id: string;
  filename?: string | null | undefined;
  description?: string | null | undefined;
  isRemix?: boolean | null | undefined;
};

/** @internal */
export const MessageAttachmentRequest$inboundSchema: z.ZodType<
  MessageAttachmentRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  filename: z.nullable(z.string()).optional(),
  description: z.nullable(z.string()).optional(),
  is_remix: z.nullable(z.boolean()).optional(),
}).transform((v) => {
  return remap$(v, {
    "is_remix": "isRemix",
  });
});

/** @internal */
export type MessageAttachmentRequest$Outbound = {
  id: string;
  filename?: string | null | undefined;
  description?: string | null | undefined;
  is_remix?: boolean | null | undefined;
};

/** @internal */
export const MessageAttachmentRequest$outboundSchema: z.ZodType<
  MessageAttachmentRequest$Outbound,
  z.ZodTypeDef,
  MessageAttachmentRequest
> = z.object({
  id: z.string(),
  filename: z.nullable(z.string()).optional(),
  description: z.nullable(z.string()).optional(),
  isRemix: z.nullable(z.boolean()).optional(),
}).transform((v) => {
  return remap$(v, {
    isRemix: "is_remix",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MessageAttachmentRequest$ {
  /** @deprecated use `MessageAttachmentRequest$inboundSchema` instead. */
  export const inboundSchema = MessageAttachmentRequest$inboundSchema;
  /** @deprecated use `MessageAttachmentRequest$outboundSchema` instead. */
  export const outboundSchema = MessageAttachmentRequest$outboundSchema;
  /** @deprecated use `MessageAttachmentRequest$Outbound` instead. */
  export type Outbound = MessageAttachmentRequest$Outbound;
}
