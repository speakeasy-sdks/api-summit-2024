/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type GuildRoleTagsResponse = {
  premiumSubscriber?: any | null | undefined;
  botId?: string | null | undefined;
  integrationId?: string | null | undefined;
  subscriptionListingId?: string | null | undefined;
  availableForPurchase?: any | null | undefined;
  guildConnections?: any | null | undefined;
};

/** @internal */
export const GuildRoleTagsResponse$inboundSchema: z.ZodType<
  GuildRoleTagsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  premium_subscriber: z.nullable(z.any()).optional(),
  bot_id: z.nullable(z.string()).optional(),
  integration_id: z.nullable(z.string()).optional(),
  subscription_listing_id: z.nullable(z.string()).optional(),
  available_for_purchase: z.nullable(z.any()).optional(),
  guild_connections: z.nullable(z.any()).optional(),
}).transform((v) => {
  return remap$(v, {
    "premium_subscriber": "premiumSubscriber",
    "bot_id": "botId",
    "integration_id": "integrationId",
    "subscription_listing_id": "subscriptionListingId",
    "available_for_purchase": "availableForPurchase",
    "guild_connections": "guildConnections",
  });
});

/** @internal */
export type GuildRoleTagsResponse$Outbound = {
  premium_subscriber?: any | null | undefined;
  bot_id?: string | null | undefined;
  integration_id?: string | null | undefined;
  subscription_listing_id?: string | null | undefined;
  available_for_purchase?: any | null | undefined;
  guild_connections?: any | null | undefined;
};

/** @internal */
export const GuildRoleTagsResponse$outboundSchema: z.ZodType<
  GuildRoleTagsResponse$Outbound,
  z.ZodTypeDef,
  GuildRoleTagsResponse
> = z.object({
  premiumSubscriber: z.nullable(z.any()).optional(),
  botId: z.nullable(z.string()).optional(),
  integrationId: z.nullable(z.string()).optional(),
  subscriptionListingId: z.nullable(z.string()).optional(),
  availableForPurchase: z.nullable(z.any()).optional(),
  guildConnections: z.nullable(z.any()).optional(),
}).transform((v) => {
  return remap$(v, {
    premiumSubscriber: "premium_subscriber",
    botId: "bot_id",
    integrationId: "integration_id",
    subscriptionListingId: "subscription_listing_id",
    availableForPurchase: "available_for_purchase",
    guildConnections: "guild_connections",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GuildRoleTagsResponse$ {
  /** @deprecated use `GuildRoleTagsResponse$inboundSchema` instead. */
  export const inboundSchema = GuildRoleTagsResponse$inboundSchema;
  /** @deprecated use `GuildRoleTagsResponse$outboundSchema` instead. */
  export const outboundSchema = GuildRoleTagsResponse$outboundSchema;
  /** @deprecated use `GuildRoleTagsResponse$Outbound` instead. */
  export type Outbound = GuildRoleTagsResponse$Outbound;
}
