/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type ApplicationOAuth2InstallParamsResponse = {
    scopes: Array<string>;
    permissions: string;
};

/** @internal */
export const ApplicationOAuth2InstallParamsResponse$inboundSchema: z.ZodType<
    ApplicationOAuth2InstallParamsResponse,
    z.ZodTypeDef,
    unknown
> = z.object({
    scopes: z.array(z.string()),
    permissions: z.string(),
});

/** @internal */
export type ApplicationOAuth2InstallParamsResponse$Outbound = {
    scopes: Array<string>;
    permissions: string;
};

/** @internal */
export const ApplicationOAuth2InstallParamsResponse$outboundSchema: z.ZodType<
    ApplicationOAuth2InstallParamsResponse$Outbound,
    z.ZodTypeDef,
    ApplicationOAuth2InstallParamsResponse
> = z.object({
    scopes: z.array(z.string()),
    permissions: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApplicationOAuth2InstallParamsResponse$ {
    /** @deprecated use `ApplicationOAuth2InstallParamsResponse$inboundSchema` instead. */
    export const inboundSchema = ApplicationOAuth2InstallParamsResponse$inboundSchema;
    /** @deprecated use `ApplicationOAuth2InstallParamsResponse$outboundSchema` instead. */
    export const outboundSchema = ApplicationOAuth2InstallParamsResponse$outboundSchema;
    /** @deprecated use `ApplicationOAuth2InstallParamsResponse$Outbound` instead. */
    export type Outbound = ApplicationOAuth2InstallParamsResponse$Outbound;
}
