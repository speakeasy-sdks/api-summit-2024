/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import {
    UserResponse,
    UserResponse$inboundSchema,
    UserResponse$Outbound,
    UserResponse$outboundSchema,
} from "./userresponse.js";
import * as z from "zod";

export type MessageInteractionResponse = {
    id: string;
    type?: 1 | undefined;
    name: string;
    user?: UserResponse | null | undefined;
    nameLocalized?: string | null | undefined;
};

/** @internal */
export const MessageInteractionResponse$inboundSchema: z.ZodType<
    MessageInteractionResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        id: z.string(),
        type: z.literal(1).optional(),
        name: z.string(),
        user: z.nullable(UserResponse$inboundSchema).optional(),
        name_localized: z.nullable(z.string()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            name_localized: "nameLocalized",
        });
    });

/** @internal */
export type MessageInteractionResponse$Outbound = {
    id: string;
    type: 1;
    name: string;
    user?: UserResponse$Outbound | null | undefined;
    name_localized?: string | null | undefined;
};

/** @internal */
export const MessageInteractionResponse$outboundSchema: z.ZodType<
    MessageInteractionResponse$Outbound,
    z.ZodTypeDef,
    MessageInteractionResponse
> = z
    .object({
        id: z.string(),
        type: z.literal(1).default(1 as const),
        name: z.string(),
        user: z.nullable(UserResponse$outboundSchema).optional(),
        nameLocalized: z.nullable(z.string()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            nameLocalized: "name_localized",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MessageInteractionResponse$ {
    /** @deprecated use `MessageInteractionResponse$inboundSchema` instead. */
    export const inboundSchema = MessageInteractionResponse$inboundSchema;
    /** @deprecated use `MessageInteractionResponse$outboundSchema` instead. */
    export const outboundSchema = MessageInteractionResponse$outboundSchema;
    /** @deprecated use `MessageInteractionResponse$Outbound` instead. */
    export type Outbound = MessageInteractionResponse$Outbound;
}
