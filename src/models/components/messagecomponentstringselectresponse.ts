/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  SelectOptionResponse,
  SelectOptionResponse$inboundSchema,
  SelectOptionResponse$Outbound,
  SelectOptionResponse$outboundSchema,
} from "./selectoptionresponse.js";

export type MessageComponentStringSelectResponse = {
  type?: 1 | undefined;
  id: number;
  customId: string;
  placeholder?: string | null | undefined;
  minValues?: number | null | undefined;
  maxValues?: number | null | undefined;
  disabled?: boolean | null | undefined;
  options?: Array<SelectOptionResponse> | null | undefined;
};

/** @internal */
export const MessageComponentStringSelectResponse$inboundSchema: z.ZodType<
  MessageComponentStringSelectResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: z.literal(1).optional(),
  id: z.number().int(),
  custom_id: z.string(),
  placeholder: z.nullable(z.string()).optional(),
  min_values: z.nullable(z.number().int()).optional(),
  max_values: z.nullable(z.number().int()).optional(),
  disabled: z.nullable(z.boolean()).optional(),
  options: z.nullable(z.array(SelectOptionResponse$inboundSchema)).optional(),
}).transform((v) => {
  return remap$(v, {
    "custom_id": "customId",
    "min_values": "minValues",
    "max_values": "maxValues",
  });
});

/** @internal */
export type MessageComponentStringSelectResponse$Outbound = {
  type: 1;
  id: number;
  custom_id: string;
  placeholder?: string | null | undefined;
  min_values?: number | null | undefined;
  max_values?: number | null | undefined;
  disabled?: boolean | null | undefined;
  options?: Array<SelectOptionResponse$Outbound> | null | undefined;
};

/** @internal */
export const MessageComponentStringSelectResponse$outboundSchema: z.ZodType<
  MessageComponentStringSelectResponse$Outbound,
  z.ZodTypeDef,
  MessageComponentStringSelectResponse
> = z.object({
  type: z.literal(1).default(1 as const),
  id: z.number().int(),
  customId: z.string(),
  placeholder: z.nullable(z.string()).optional(),
  minValues: z.nullable(z.number().int()).optional(),
  maxValues: z.nullable(z.number().int()).optional(),
  disabled: z.nullable(z.boolean()).optional(),
  options: z.nullable(z.array(SelectOptionResponse$outboundSchema)).optional(),
}).transform((v) => {
  return remap$(v, {
    customId: "custom_id",
    minValues: "min_values",
    maxValues: "max_values",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MessageComponentStringSelectResponse$ {
  /** @deprecated use `MessageComponentStringSelectResponse$inboundSchema` instead. */
  export const inboundSchema =
    MessageComponentStringSelectResponse$inboundSchema;
  /** @deprecated use `MessageComponentStringSelectResponse$outboundSchema` instead. */
  export const outboundSchema =
    MessageComponentStringSelectResponse$outboundSchema;
  /** @deprecated use `MessageComponentStringSelectResponse$Outbound` instead. */
  export type Outbound = MessageComponentStringSelectResponse$Outbound;
}
