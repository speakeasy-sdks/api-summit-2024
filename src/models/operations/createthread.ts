/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type CreateThreadRequestBody =
    | components.CreateForumThreadRequest
    | components.CreateTextThreadWithoutMessageRequest;

export type CreateThreadRequest = {
    channelId: string;
    requestBody:
        | components.CreateForumThreadRequest
        | components.CreateTextThreadWithoutMessageRequest;
};

/** @internal */
export const CreateThreadRequestBody$inboundSchema: z.ZodType<
    CreateThreadRequestBody,
    z.ZodTypeDef,
    unknown
> = z.union([
    components.CreateForumThreadRequest$inboundSchema,
    components.CreateTextThreadWithoutMessageRequest$inboundSchema,
]);

/** @internal */
export type CreateThreadRequestBody$Outbound =
    | components.CreateForumThreadRequest$Outbound
    | components.CreateTextThreadWithoutMessageRequest$Outbound;

/** @internal */
export const CreateThreadRequestBody$outboundSchema: z.ZodType<
    CreateThreadRequestBody$Outbound,
    z.ZodTypeDef,
    CreateThreadRequestBody
> = z.union([
    components.CreateForumThreadRequest$outboundSchema,
    components.CreateTextThreadWithoutMessageRequest$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateThreadRequestBody$ {
    /** @deprecated use `CreateThreadRequestBody$inboundSchema` instead. */
    export const inboundSchema = CreateThreadRequestBody$inboundSchema;
    /** @deprecated use `CreateThreadRequestBody$outboundSchema` instead. */
    export const outboundSchema = CreateThreadRequestBody$outboundSchema;
    /** @deprecated use `CreateThreadRequestBody$Outbound` instead. */
    export type Outbound = CreateThreadRequestBody$Outbound;
}

/** @internal */
export const CreateThreadRequest$inboundSchema: z.ZodType<
    CreateThreadRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        channel_id: z.string(),
        RequestBody: z.union([
            components.CreateForumThreadRequest$inboundSchema,
            components.CreateTextThreadWithoutMessageRequest$inboundSchema,
        ]),
    })
    .transform((v) => {
        return remap$(v, {
            channel_id: "channelId",
            RequestBody: "requestBody",
        });
    });

/** @internal */
export type CreateThreadRequest$Outbound = {
    channel_id: string;
    RequestBody:
        | components.CreateForumThreadRequest$Outbound
        | components.CreateTextThreadWithoutMessageRequest$Outbound;
};

/** @internal */
export const CreateThreadRequest$outboundSchema: z.ZodType<
    CreateThreadRequest$Outbound,
    z.ZodTypeDef,
    CreateThreadRequest
> = z
    .object({
        channelId: z.string(),
        requestBody: z.union([
            components.CreateForumThreadRequest$outboundSchema,
            components.CreateTextThreadWithoutMessageRequest$outboundSchema,
        ]),
    })
    .transform((v) => {
        return remap$(v, {
            channelId: "channel_id",
            requestBody: "RequestBody",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateThreadRequest$ {
    /** @deprecated use `CreateThreadRequest$inboundSchema` instead. */
    export const inboundSchema = CreateThreadRequest$inboundSchema;
    /** @deprecated use `CreateThreadRequest$outboundSchema` instead. */
    export const outboundSchema = CreateThreadRequest$outboundSchema;
    /** @deprecated use `CreateThreadRequest$Outbound` instead. */
    export type Outbound = CreateThreadRequest$Outbound;
}
