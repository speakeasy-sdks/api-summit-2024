/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type ListMessagesRequest = {
  channelId: string;
  around?: string | undefined;
  before?: string | undefined;
  after?: string | undefined;
  limit?: number | undefined;
};

/** @internal */
export const ListMessagesRequest$inboundSchema: z.ZodType<
  ListMessagesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  channel_id: z.string(),
  around: z.string().optional(),
  before: z.string().optional(),
  after: z.string().optional(),
  limit: z.number().int().optional(),
}).transform((v) => {
  return remap$(v, {
    "channel_id": "channelId",
  });
});

/** @internal */
export type ListMessagesRequest$Outbound = {
  channel_id: string;
  around?: string | undefined;
  before?: string | undefined;
  after?: string | undefined;
  limit?: number | undefined;
};

/** @internal */
export const ListMessagesRequest$outboundSchema: z.ZodType<
  ListMessagesRequest$Outbound,
  z.ZodTypeDef,
  ListMessagesRequest
> = z.object({
  channelId: z.string(),
  around: z.string().optional(),
  before: z.string().optional(),
  after: z.string().optional(),
  limit: z.number().int().optional(),
}).transform((v) => {
  return remap$(v, {
    channelId: "channel_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListMessagesRequest$ {
  /** @deprecated use `ListMessagesRequest$inboundSchema` instead. */
  export const inboundSchema = ListMessagesRequest$inboundSchema;
  /** @deprecated use `ListMessagesRequest$outboundSchema` instead. */
  export const outboundSchema = ListMessagesRequest$outboundSchema;
  /** @deprecated use `ListMessagesRequest$Outbound` instead. */
  export type Outbound = ListMessagesRequest$Outbound;
}
