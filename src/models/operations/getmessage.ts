/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type GetMessageRequest = {
    channelId: string;
    messageId: string;
};

/** @internal */
export const GetMessageRequest$inboundSchema: z.ZodType<GetMessageRequest, z.ZodTypeDef, unknown> =
    z
        .object({
            channel_id: z.string(),
            message_id: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                channel_id: "channelId",
                message_id: "messageId",
            });
        });

/** @internal */
export type GetMessageRequest$Outbound = {
    channel_id: string;
    message_id: string;
};

/** @internal */
export const GetMessageRequest$outboundSchema: z.ZodType<
    GetMessageRequest$Outbound,
    z.ZodTypeDef,
    GetMessageRequest
> = z
    .object({
        channelId: z.string(),
        messageId: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            channelId: "channel_id",
            messageId: "message_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetMessageRequest$ {
    /** @deprecated use `GetMessageRequest$inboundSchema` instead. */
    export const inboundSchema = GetMessageRequest$inboundSchema;
    /** @deprecated use `GetMessageRequest$outboundSchema` instead. */
    export const outboundSchema = GetMessageRequest$outboundSchema;
    /** @deprecated use `GetMessageRequest$Outbound` instead. */
    export type Outbound = GetMessageRequest$Outbound;
}
